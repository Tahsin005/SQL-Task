CREATE DATABASE IF NOT EXISTS COLLEGEDETAILS;
USE COLLEGEDETAILS;

DROP TABLE IF EXISTS STUDENT, DEPT, TEACHER;
-- CREATE TABLE STUDENT(
-- 	ROLL INT PRIMARY KEY,
--     NAME VARCHAR(50),
--     MARKS INT NOT NULL,
--     GRADE VARCHAR(1),
--     CITY VARCHAR(20)
-- );

-- -- CREATE TABLE DEPT(
-- -- 	ID INT PRIMARY KEY,
-- --     NAME VARCHAR(50)
-- -- );
-- -- DROP TABLE TEACHER;
-- -- CREATE TABLE TEACHER(
-- -- 	TEACHER_ID INT PRIMARY KEY,
-- --     NAME VARCHAR(50),
-- --     DEPT_ID INT,
-- --     FOREIGN KEY(DEPT_ID) REFERENCES DEPT(ID)
-- -- );
-- INSERT INTO STUDENT
-- (ROLL, NAME, MARKS, GRADE, CITY)
-- VALUES
-- (101, "ANIL", 78, "C", "PUNE"),
-- (102, "BHUMIKA", 93, "A", "MUMBAI"),
-- (103, "CHETAN", 85, "B", "MUMBAI"),
-- (104, "DHRUV", 96, "A", "DELHI"),
-- (105, "EMANUEL", 92, "F", "DELHI"),
-- (106, "FARAH", 82, "B", "DELHI");

-- SELECT * 
-- FROM STUDENT
-- WHERE MARKS > 80 AND CITY = "DELHI";


-- SELECT *
-- FROM STUDENT
-- WHERE MARKS BETWEEN 80 AND 90;


-- SELECT *
-- FROM STUDENT
-- WHERE CITY IN ("DELHI", "MUMBAI");



-- SELECT *
-- FROM STUDENT
-- WHERE CITY NOT IN ("DELHI", "MUMBAI");

-- SELECT *
-- FROM STUDENT
-- WHERE MARKS > 75
-- LIMIT 2;

-- SELECT *
-- FROM STUDENT
-- ORDER BY CITY ASC;

-- SELECT CITY, AVG(MARKS)
-- FROM STUDENT
-- GROUP BY CITY;

-- SELECT CITY, COUNT(ROLL)
-- FROM STUDENT
-- GROUP BY CITY
-- HAVING MAX(MARKS) > 90;

-- SET SQL_SAFE_UPDATES = 0;
-- UPDATE STUDENT
-- SET GRADE = "O"
-- WHERE GRADE = "A";
-- SET SQL_SAFE_UPDATES = 1;


-- -- ALTER TABLE
-- ALTER TABLE STUDENT
-- ADD COLUMN AGE INT;

-- ALTER TABLE STUDENT 
-- DROP COLUMN AGE;

-- TRUNCATE TABLE STUDENT;

-- ALTER TABLE STUDENT 
-- CHANGE NAME FULL_NAME VARCHAR(50);

-- ALTER TABLE STUDENT 
-- CHANGE FULL_NAME NAME VARCHAR(50);

-- DELETE FROM STUDENT
-- WHERE MARKS < 80;

-- ALTER TABLE STUDENT 
-- DROP COLUMN GRADE;

-- SELECT * 
-- FROM STUDENT;



/* JOIN */

CREATE TABLE STUDENT(
	ID INT PRIMARY KEY,
    NAME VARCHAR(50)
);
INSERT INTO STUDENT(ID, NAME) VALUES (101, "ADAM"),
									 (102, "BOB"),
                                     (103, "CASEY");
									
CREATE TABLE COURSE(
	ID INT PRIMARY KEY,
    COURSE_NAME VARCHAR(50)
);

INSERT INTO
COURSE
(ID, COURSE_NAME)
VALUES
(102, "ENGLISH"),
(103, "MATH"),
(104, "SCIENCE"),
(105, "COMPUTER SCIENCE");

SELECT *
FROM COURSE;

SELECT *
FROM STUDENT
RIGHT JOIN COURSE
ON STUDENT.ID = COURSE.ID;

SELECT *
FROM STUDENT
LEFT JOIN COURSE
ON STUDENT.ID = COURSE.ID;

-- FULL JOIN --
SELECT *
FROM STUDENT
RIGHT JOIN COURSE
ON STUDENT.ID = COURSE.ID
UNION
SELECT *
FROM STUDENT
LEFT JOIN COURSE
ON STUDENT.ID = COURSE.ID;

-- LEFT JOIN EXCLUSIVE --
SELECT *
FROM STUDENT
LEFT JOIN COURSE
ON STUDENT.ID = COURSE.ID
WHERE COURSE.ID IS NULL;

-- RIGHT JOIN EXCLUSIVE --
SELECT *
FROM STUDENT
RIGHT JOIN COURSE
ON STUDENT.ID = COURSE.ID
WHERE STUDENT.ID IS NULL;

-- FULL EXCLUSIVE JOIN -- 
SELECT *
FROM STUDENT
LEFT JOIN COURSE
ON STUDENT.ID = COURSE.ID
WHERE COURSE.ID IS NULL

UNION

SELECT *
FROM STUDENT
RIGHT JOIN COURSE
ON STUDENT.ID = COURSE.ID
WHERE STUDENT.ID IS NULL;










CREATE TABLE EMPLOYEE(
	ID INT PRIMARY KEY,
    NAME VARCHAR(50),
    MANAGER_ID INT
);

INSERT INTO
EMPLOYEE
(ID, NAME, MANAGER_ID)
VALUES
(101, "ADAM", 103),
(102, "BOB", 104),
(103, "CASEY", NULL),
(104, "DONALD", 103);

-- SELF JOIN --
SELECT A.NAME AS MANAGER_NAME, B.NAME AS EMPLOYEE_NAME
FROM EMPLOYEE AS A
JOIN EMPLOYEE AS B
ON A.ID = B.MANAGER_ID;


-- SUB - QUERIES
CREATE TABLE STUDENT(
	ROLL INT PRIMARY KEY,
    NAME VARCHAR(50),
    MARKS INT NOT NULL,
    GRADE VARCHAR(1),
    CITY VARCHAR(20)
);

INSERT INTO STUDENT
(ROLL, NAME, MARKS, GRADE, CITY)
VALUES
(101, "ANIL", 78, "C", "PUNE"),
(102, "BHUMIKA", 93, "A", "MUMBAI"),
(103, "CHETAN", 85, "B", "MUMBAI"),
(104, "DHRUV", 96, "A", "DELHI"),
(105, "EMANUEL", 92, "F", "DELHI"),
(106, "FARAH", 82, "B", "DELHI");

SELECT *
FROM STUDENT 
WHERE MARKS > (SELECT AVG(MARKS) FROM STUDENT);

SELECT @STORE :=(
	SELECT AVG(MARKS)
    FROM STUDENT
);

SELECT *
FROM STUDENT
WHERE MARKS > @STORE;

SELECT NAME
FROM STUDENT
WHERE ROLL % 2 = 0;

SELECT ROLL, NAME
FROM STUDENT 
WHERE ROLL IN (SELECT ROLL
			FROM STUDENT
			WHERE ROLL % 2 = 0);
            
            
SELECT MAX(MARKS)
FROM (SELECT * FROM STUDENT WHERE CITY = "DELHI") AS TEMP;


-- VIEW --
CREATE VIEW VIEW1 AS
SELECT ROLL, NAME, MARKS FROM STUDENT;

SELECT *
FROM VIEW1
WHERE MARKS > 90;